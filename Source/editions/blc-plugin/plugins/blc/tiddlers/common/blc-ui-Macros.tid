title: blc/common/Macros
tags: $:/tags/Macro

\define EmptyString(strEmpty:"")
$strEmpty$
\end

\define alert(alertText:"")
  <$action-createtiddler $basetitle="Alert" component="Alert from $(currentTiddler)$" tags="$:/tags/Alert" text="$alertText$" />
\end

\define actionDragSameTiddler()
  <$action-sendmessage $message="tm-notify" $param="blc/ui/notifications/DraggedOntoSame" />
\end

\define filterBoardL2(board)
[[$board$]] [[$board$]tagging[]]
\end

\define filterBoardL3(board)
[[$board$]] [[$board$]tagging[]] [[$board$]tagging[]tagging[]]
\end

\define filterBoardL2_currentBoard()
[<currentBoardTiddler>] [<currentBoardTiddler>tagging[]]
\end

\define filterBoardL3_currentBoard()
[<currentBoardTiddler>] [<currentBoardTiddler>tagging[]] [<currentBoardTiddler>tagging[]tagging[]]
\end

\define filterLists_currentBoard()
[<currentBoardTiddler>tagging[]]
\end




\define blcStoryList()
$(currentTiddler)$
\end

\define blcHistoryList()
$(EmptyString)$
\end

\define tiddlerStringFilter()
$(currentBoardTiddler)$-StringFilter
\end

\define tiddlerHeldCard()
$(currentBoardTiddler)$-HeldCard
\end

\define styleTagColor()
background-color: $(tagColor)$;
\end

\define styleIconColor()
fill:$(foregroundColor)$;
\end

\define styleBoardHeightDefault()
80vh
\end
\define styleBoardHeightOption()
height: $(boardHeight)$;
\end

\define styleListWidthDefault()
15.5rem
\end
\define styleListWidthOption()
min-width: $(listWidth)$;
\end

\define styleListMaxDefault()
9999rem
\end
\define styleListMaxOption()
max-width: $(listWidthMax)$;
\end

\define styleListWidthCombo()
$(styleListWidthOption)$ $(styleListMaxOption)$
\end




\define ResetListToTagging(listTid)
  <!-- Assign a new list in which tiddler order is as discovered by the tagging operator. -->
  <!-- The order returned by the tagging operator is determined by list field, list-before and list-after fields, and adds other tiddlers with the tag to the end. -->
  <!-- Without this step, the insertbefore listop cannot work when the action tiddler is dragged onto a tiddler that is not in the list. -->
  <!-- The drawback is that tiddlers added to the list which are not also tagged by the list are eliminated. -->
  <!-- Also, when doing this operation frequently or on larger lists, we should watch to see if performance becomes a problem. -->
  <$set name="newList" filter="[[$listTid$]tagging[]]">
    <$action-setfield $tiddler="""$listTid$""" $field="list" $value=<<newList>> />
  </$set>
\end

\define action-conditionalRemoveActionTidFromList()
<$set name="listTiddlers" filter="$(filterLists_currentBoard)$" >
  <$set name="action-doRemove" filter="[enlist<listTiddlers>] +[field:title<actionTiddler>]"
      value="""<$macrocall $name="actionRemoveTwoWay" removeTid=<<actionTiddler>> targetTid=<<currentBoardTiddler>> />"""
      emptyValue="" >
    <<action-doRemove>>
  </$set>
</$set>
\end

\define action-deleteHeldCard()
  <$set name="action-dhc" filter="[<actionTiddler>] -[<tiddlerHeldCard>get[text]]"
      value=""
      emptyValue="""<$action-deletetiddler $tiddler=<<tiddlerHeldCard>> />""" >
    <<action-dhc>>
  </$set>
\end

\define actionRemoveTwoWay_OneFromMany(removeTid, targetFilter_byDef)
  <$set name="manyTids" filter=<<$targetFilter_byDef$>> >
    <!-- Remove tags from the one tiddler of all target Tiddlers. -->
    <$action-listops $tiddler="""$removeTid$""" $tags="+[remove<manyTids>]" />
    <!-- Remove the one tiddler from lists of all target Tiddlers. -->
    <$list filter=<<manyTids>> variable="eachList">
      <$action-listops $tiddler=<<eachList>> $subfilter="+[remove[$removeTid$]]" />
    </$list>
  </$set>
\end

\define actionRemoveTwoWay(removeTid, targetTid)
  <!-- Remove the removeTid from this targetTid -->
  <$action-listops $tiddler="""$targetTid$""" $subfilter="-[[$removeTid$]]" />
  <!-- Remove this tag from the removeTid -->
  <$action-listops $tiddler="""$removeTid$""" $tags="-[[$targetTid$]]"/>
\end

\define actionAddTwoWay(addTid, targetTid, beforeTid)
  <$set name="beforeTid_p" filter="[[$beforeTid$]]">
    <!-- Add the addTid to this targetTid -->
    <$action-listops $tiddler="""$targetTid$""" $subfilter="+[insertbefore:beforeTid_p[$addTid$]]" />
    <!-- Add this tag to the addTid -->
    <$action-listops $tiddler="""$addTid$""" $tags="[[$targetTid$]]"/>
  </$set>
\end

\define actionInsertTwoWay(insert, before, in, uniqueAmong_byDef)
  <$macrocall $name="ResetListToTagging" listTid="""$in$""" />
  <$macrocall $name="actionRemoveTwoWay_OneFromMany" removeTid="""$insert$""" targetFilter_byDef="""$uniqueAmong_byDef$""" />
  <$macrocall $name="actionAddTwoWay" addTid="""$insert$""" targetTid="""$in$""" beforeTid="""$before$""" />
\end

\define actionInsertNewTwoWay(before, in)
  <$set name="newTiddler" value=<<now "tid-YYYY0MM0DD0hh0mm0ss">> >
    <$action-createtiddler $basetitle=<<newTiddler>> />
    <$macrocall $name="ResetListToTagging" listTid="""$in$""" />
    <$macrocall $name="actionAddTwoWay"    addTid=<<newTiddler>> targetTid="""$in$""" beforeTid="""$before$""" />
    <$action-sendmessage $message="tm-edit-tiddler" $param=<<newTiddler>> />
  </$set>
\end


\define actionExistingListTiddler()
  <$set name="action-DiffOrSame" filter="[<currentListTiddler>] +[remove<actionTiddler>]"
      value="""
        <<action-deleteHeldCard>>
        <$macrocall $name="actionInsertTwoWay" insert=<<actionTiddler>> before=<<currentListTiddler>> in=<<currentBoardTiddler>> uniqueAmong_byDef="filterBoardL2_currentBoard" />
        """
      emptyValue=<<actionDragSameTiddler>> >
    <<action-DiffOrSame>>
  </$set>
\end

\define blcListDroppableActions()
  <$set name="action-ExtOrNew" filter="[<actionTiddler>] +[remove[blc/action/newCard]]"
      value="""<$macrocall $name="actionExistingListTiddler" />"""
      emptyValue="""<$macrocall $name="actionInsertNewTwoWay" before=<<currentListTiddler>> in=<<currentBoardTiddler>> />""" >
    <<action-ExtOrNew>>
  </$set>
\end

\define actionExistingCardTiddler()
  <$set name="action-DiffOrSame" filter="[<currentCardTiddler>] +[remove<actionTiddler>]"
      value="""
        <<action-deleteHeldCard>>
        <$macrocall $name="actionInsertTwoWay" insert=<<actionTiddler>> before=<<currentCardTiddler>> in=<<currentListTiddler>> uniqueAmong_byDef="filterLists_currentBoard" />
        <!-- If action tiddler is in filterLists_currentBoard, remove it. Doing this instead of using filterBoardL2_currentBoard in uniqueAmong_byDef above avoids unnecessary rerendering of the board which causes loss of scroll position. -->
        <<action-conditionalRemoveActionTidFromList>>
        """
      emptyValue=<<actionDragSameTiddler>> >
    <<action-DiffOrSame>>
  </$set>
\end

\define blcCardDroppableActions()
  <$set name="action-ExtOrNew" filter="[<actionTiddler>] +[remove[blc/action/newCard]]"
      value="""<$macrocall $name="actionExistingCardTiddler" />"""
      emptyValue="""<$macrocall $name="actionInsertNewTwoWay" before=<<currentCardTiddler>> in=<<currentListTiddler>> />""" >
    <<action-ExtOrNew>>
  </$set>
\end
